C51 COMPILER V9.56.0.0   SC_IT                                                             09/07/2020 22:21:33 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SC_IT
OBJECT MODULE PLACED IN ..\Output\SC_it.obj
COMPILER INVOKED BY: E:\keil5\C51\BIN\C51.EXE ..\User\SC_it.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\FWLib\SC95F8x1x_Li
                    -b\inc;..\User) DEBUG PRINT(..\List\SC_it.lst) OBJECT(..\Output\SC_it.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        : SC_it.c
   4          //      作者            : 
   5          //      模块功能        : sc92F744XB 中断服务程序
   6          //      局部函数列表:
   7          //  最后更正日期: 2019/1/21
   8          //      版本            : V1.0   
   9          //*************************************************************
  10          /********************Includes************************************************************************/
  11          
  12          
  13          /********************Includes************************************************************************/
  14          #include "SC_it.h"
  15          #include "..\Drivers\SCDriver_list.h"
  16          #include "HeadFiles\CustomType.h"
  17          #include "HeadFiles\UserExport.h"
  18          #include "HeadFiles\FunctionType.h"
  19          /*<UserCodeStart>*/
  20          #include "NST1001.h"
  21          #include "EC06_key.h"
  22          
  23          /*<UserCodeEnd>*/
  24          
  25          /*********<GlobalVariables>**************************************************************************/                  
  26          /*********<GlobalVariablesAnnounceBegin>**************************************/
  27          /*********<GlobalVariablesAnnounceEnd>****************************************/
  28          /*<UserCodeStart>*/
  29          /*<UserCodeEnd>*/
  30          
  31          /*********<GlobalFunctions>**************************************************************************/                  
  32          /*********<GlobalFunctionsAnnounceBegin>**************************************/
  33          /*********<GlobalFunctionsAnnounceEnd>****************************************/
  34          /*<UserCodeStart>*/
  35          /*<UserCodeEnd>*/
  36          
  37          /****************Pragma directive********************************************************************/
  38          /*<UserCodeStart>*/
  39          /*<UserCodeEnd>*/
  40          
  41          /*********<GlobalVariables>**************************************************************************/                  
  42          /*********<GlobalVariablesDefineBegin>**************************************/
  43          /*********<GlobalVariablesDefineEnd>****************************************/
  44          /*<UserCodeStart>*/
  45          
  46          
  47          
  48          /*<UserCodeEnd>*/
  49          
  50          
  51          /*********<GlobalFunctions>**************************************************************************/                  
  52          /*********<GlobalFunctionsDefineBegin>**************************************/
  53          /*********<GlobalFunctionsDefineEnd>****************************************/
  54          /*********<GlobalFunctionsRealizeBegin>**************************************/
C51 COMPILER V9.56.0.0   SC_IT                                                             09/07/2020 22:21:33 PAGE 2   

  55          /*********<GlobalFunctionsRealizeEnd>****************************************/
  56          /*<UserCodeStart>*/
  57          bit  TIME_2msFlag=0;
  58          bit  TIME_3msFlag=0;
  59          bit  TIME_5msFlag=0;
  60          bit  TIME_10msFlag=0;
  61          
  62          bit  TIME_50msFlag=0;
  63          bit  TIME_100msFlag=0;
  64          bit  TIME_150msFlag=0;
  65          bit  TIME_200msFlag=0;
  66          bit  TIME_300msFlag=0;
  67          bit  TIME_400msFlag=0;
  68          bit  TIME_500msFlag=0;
  69          bit  TIME_1000msFlag=0;
  70          
  71          unsigned int blink_start_count = 0;
  72          
  73          /*<UserCodeEnd>*/
  74          
  75          
  76          
  77          
  78          void INT0Interrupt()            interrupt 0                             
  79          {
  80   1      /*<UserCodeStart>*/
  81   1              temp_num++;
  82   1      /*<UserCodeEnd>*/
  83   1          TCON &= 0XFD;//clear Interrupt flag
  84   1          /*INT0_it write here*/
  85   1      }
  86          
  87          void Timer0Interrupt()          interrupt 1                        
  88          {
  89   1      /*<UserCodeStart>*/
  90   1      
  91   1      /*<UserCodeEnd>*/
  92   1          /*TIM0_it write here*/              
  93   1      }
  94          
  95          void INT1Interrupt()            interrupt 2             
  96          {
  97   1              
  98   1      /*<UserCodeStart>*/
  99   1      
 100   1      
 101   1              //旋转编码器下降沿累计
 102   1              
 103   1      /*<UserCodeEnd>*/
 104   1          TCON &= 0XF7;//clear Interrupt flag 
 105   1          /*INT1_it write here*/      
 106   1      }
 107          
 108          void Timer1Interrupt()          interrupt 3             
 109          {
 110   1      /*<UserCodeStart>*/
 111   1      
 112   1      /*<UserCodeEnd>*/
 113   1          /*TIM1_it write here*/              
 114   1      }
 115          
 116          void UART0Interrupt()           interrupt 4             
C51 COMPILER V9.56.0.0   SC_IT                                                             09/07/2020 22:21:33 PAGE 3   

 117          {
 118   1      /*<UserCodeStart>*/
 119   1      
 120   1      /*<UserCodeEnd>*/
 121   1          /*UART0_it write here*/             
 122   1      }
 123          
 124          void Timer2Interrupt()          interrupt 5             
 125          {
 126   1      /*<UserCodeStart>*/
 127   1              static u16 timer2=0;
 128   1      
 129   1              spin_scan();                    //旋转编码器动作扫描
 130   1              
 131   1              TFX = 0;
 132   1              
 133   1              timer2++;                               
 134   1              
 135   1              
 136   1              if(temp_start_flag == 1)                //1s后开始温度采集
 137   1              {       
 138   2                      temp_collect_timer2++;
 139   2                      
 140   2                      if(temp_over_flag == 1) 
 141   2                              temp_over_timer2++;
 142   2              }
 143   1              
 144   1              if(timer2%5 == 0)
 145   1              {
 146   2                      TIME_5msFlag=1;                         //时钟芯片5ms扫描
 147   2                      
 148   2              }
 149   1              
 150   1              if(timer2%10 == 0)
 151   1              {
 152   2                      TIME_10msFlag=1;
 153   2                      key_scan();                                     //按键动作扫描
 154   2              }
 155   1              
 156   1              if(timer2%100 == 0)
 157   1              {
 158   2                      TIME_100msFlag=1;                       //主页面100ms显示
 159   2                      
 160   2              }
 161   1              
 162   1              if(timer2%200 == 0)
 163   1              {
 164   2                      TIME_200msFlag=1;
 165   2                      
 166   2              }
 167   1              if(timer2%300 == 0)
 168   1              {
 169   2                      TIME_300msFlag=1;                       //初始化时间300ms显示
 170   2                      
 171   2              }
 172   1              if(timer2%500 == 0)
 173   1              {
 174   2                      TIME_500msFlag=1;                       //符号图标闪烁
 175   2                      blink_start_count++;    
 176   2              
 177   2              }
 178   1              
C51 COMPILER V9.56.0.0   SC_IT                                                             09/07/2020 22:21:33 PAGE 4   

 179   1              if(timer2%1000 == 0)
 180   1              {               
 181   2                      TIME_1000msFlag = 1;
 182   2                      
 183   2                      temp_start_flag = 1;    
 184   2                      int1_first_flag = 1;            //打开第一次开启中断标志
 185   2              }
 186   1      
 187   1      /*<UserCodeEnd>*/
 188   1          /*TIM2_it write here*/              
 189   1      }
 190          
 191          void ADCInterrupt()                     interrupt 6             
 192          {
 193   1      /*<UserCodeStart>*/
 194   1      
 195   1      /*<UserCodeEnd>*/
 196   1          /*ADC_it write here*/               
 197   1      }
 198          
 199          void USCI0Interrupt()                   interrupt 7             
 200          {
 201   1      /*<UserCodeStart>*/
 202   1      
 203   1      /*<UserCodeEnd>*/
 204   1          /*USCI0_it write here*/             
 205   1      }
 206          
 207          void PWMInterrupt()                     interrupt 8
 208          {
 209   1      /*<UserCodeStart>*/
 210   1      
 211   1      /*<UserCodeEnd>*/
 212   1          /*PWM_it write here*/               
 213   1      }
 214          
 215          void BTMInterrupt()                     interrupt 9
 216          {
 217   1      /*<UserCodeStart>*/
 218   1      
 219   1      /*<UserCodeEnd>*/
 220   1          /*BTM_it write here*/               
 221   1      }
 222          
 223          void INT2Interrupt()            interrupt 10
 224          {
 225   1      /*<UserCodeStart>*/
 226   1              /**/
 227   1              
 228   1              spin_int1_flag = 1;
 229   1              
 230   1              TFX = 0;
 231   1      
 232   1      /*<UserCodeEnd>*/
 233   1          /*INT2_it write here*/              
 234   1      }
 235          
 236          void ACMPInterrupt()            interrupt 12
 237          {
 238   1      /*<UserCodeStart>*/
 239   1      
 240   1      /*<UserCodeEnd>*/
C51 COMPILER V9.56.0.0   SC_IT                                                             09/07/2020 22:21:33 PAGE 5   

 241   1          /*ACMP_it write here*/              
 242   1      }
 243          
 244          void Timer3Interrupt()          interrupt 13
 245          {
 246   1      /*<UserCodeStart>*/
 247   1      
 248   1      /*<UserCodeEnd>*/
 249   1          /*Timer3_it write here*/            
 250   1      }
 251          
 252          void Timer4Interrupt()          interrupt 14
 253          {
 254   1      /*<UserCodeStart>*/
 255   1      
 256   1      /*<UserCodeEnd>*/
 257   1          /*Timer4_it write here*/            
 258   1      }
 259          
 260          void USCI1Interrupt()           interrupt 15            
 261          {
 262   1      /*<UserCodeStart>*/
 263   1      
 264   1      /*<UserCodeEnd>*/
 265   1          /*USCI1_it write here*/             
 266   1      }
 267          
 268          void USCI2Interrupt()           interrupt 16            
 269          {
 270   1      /*<UserCodeStart>*/
 271   1      
 272   1      /*<UserCodeEnd>*/
 273   1          /*USCI2_it write here*/             
 274   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    298    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     12    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
