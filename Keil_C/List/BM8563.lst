C51 COMPILER V9.56.0.0   BM8563                                                            09/07/2020 22:21:34 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE BM8563
OBJECT MODULE PLACED IN ..\Output\BM8563.obj
COMPILER INVOKED BY: E:\keil5\C51\BIN\C51.EXE ..\User\BM8563.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\FWLib\SC95F8x1x_L
                    -ib\inc;..\User) DEBUG PRINT(..\List\BM8563.lst) OBJECT(..\Output\BM8563.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        : BM5863.c
   4          //      作者            : 
   5          //      模块功能        : 时钟读取
   6          //      局部函数列表:
   7          //  最后更正日期: 2019/7/10
   8          //      版本            : V1.0 
   9          //  说明        ：  I2C 总线驱动程序(用两个普通 IO 模拟 I2C 总线)用来驱动 BM8563，100k 的速率。
  10          //默认 12Mhz 的晶振。 
  11          //*************************************************************
  12          
  13           #include "BM8563.h"
  14           #include "operation.h"
  15           
  16          /* ---------------------------------------IO引脚分配定义-------------------------------------*/
  17          
  18           sbit BM8563_SDA = P5^5; /*实时时钟时钟线引脚定义,设置为高阻态上拉 */ 
  19           sbit BM8563_SCL = P5^4; /*实时时钟数据线引脚定义，设置为推挽输出 */ 
  20           
  21          /*--------------------------------------------宏定义--------------------------------------------*/
  22          
  23           #define BM8563_SDA(N)  BM8563_SDA = N
  24           #define BM8563_SCL(N)  BM8563_SCL = N
  25           
  26           #define SomeNOP(); _nop_();_nop_();_nop_();_nop_();_nop_(); 
  27          
  28           /*选择SDA的数据方向*/
  29           #define BM8563_SDA_Input()     { P5CON &= 0xDF; P5PH |= 0x20;}
  30           #define BM8563_SDA_Output()    { P5CON |= 0x30; P5PH |= 0x00;}
  31           
  32          
  33          /* -----------------------------------------全局变量定义-----------------------------------*/
  34           
  35          // static uchar twdata[9]={0x00,0x00,0x58,0x59,0x23,0x31,0x06,0x12,0x04};
  36          // /*前 2 个数据用来设置状态寄存器，后 7 个用来设置时间寄存器 */ 
  37          
  38          // static uchar trdata[7]; /*定义数组用来存储读取的时间数据 */ 
  39          // static uchar asc[14]; /*定义数组用来存储转换的 asc 码时间数据，供显示用 */ 
  40           static bit ack; 
  41           unsigned char BM8563_hour = 0;
  42           unsigned char BM8563_min = 0;
  43          /* -----------------------------------------应用程序---------------------------------------*/
  44          
  45          /*********************************************
  46          函数名：Delayus
  47          功  能：微秒延时
  48          形  参：
  49          返回值：none.
  50          备  注：应用于IIC
  51          作  者：
  52          时  间：2020/06/24
  53          **********************************************/
  54          
C51 COMPILER V9.56.0.0   BM8563                                                            09/07/2020 22:21:34 PAGE 2   

  55          void Delayus(u8 i)
  56          {
  57   1          while (i--);
  58   1      }
  59          
  60          /*********************************************
  61          函数名：IIC_Init
  62          功  能：IIC引脚初始化
  63          形  参：
  64          返回值：
  65          备  注：
  66          时  间：2019/06/11
  67          **********************************************/
  68          
  69          void IIC_Init(void)
  70          {
  71   1          BM8563_SDA_Output();
  72   1          BM8563_SDA(1);
  73   1          BM8563_SCL(1);
  74   1      }
  75           
  76          /******************************************************************** 
  77          函 数 名：BM8563_IIC_Start(void) 
  78          功 能：启动 I2C 总线的传输 
  79          说 明： 
  80          调 用： 
  81          入口参数：无 
  82          返 回 值：无 
  83          ***********************************************************************/ 
  84          
  85          void BM8563_IIC_Start(void)
  86          {
  87   1          BM8563_SDA_Output();  // 设置为输出模式
  88   1          BM8563_SCL(1);
  89   1          BM8563_SDA(1);
  90   1          Delayus(1);
  91   1          BM8563_SDA(0);
  92   1          BM8563_SCL(0);
  93   1          Delayus(2);
  94   1      }
  95          
  96          /******************************************************************** 
  97          函 数 名：BM8563_IIC_Stop(void) 
  98          功 能：停止 I2C 总线的传输 
  99          说 明： 
 100          调 用： 
 101          入口参数：无 
 102          返 回 值：无 
 103          ***********************************************************************/ 
 104          
 105          void BM8563_IIC_Stop(void)
 106          {
 107   1          BM8563_SDA_Output();  // 设置为输出模式
 108   1          BM8563_SCL(0);
 109   1          BM8563_SDA(0);
 110   1          Delayus(2);
 111   1          BM8563_SCL(1);
 112   1          BM8563_SDA(1);
 113   1          Delayus(2);
 114   1      }
 115          
 116          /******************************************************************** 
C51 COMPILER V9.56.0.0   BM8563                                                            09/07/2020 22:21:34 PAGE 3   

 117          函 数 名：BM8563_IIC_Wait_ACK(void) 
 118          功 能：IIC从设备应答
 119          说 明：
 120          调 用：
 121          入口参数： 
 122          返 回 值：无 
 123          ***********************************************************************/ 
 124          
 125          void BM8563_IIC_Wait_ACK(void)
 126          {
 127   1          uint8_t i = 0;
 128   1          BM8563_SDA_Input();            //   SDA 设置为输入
 129   1          BM8563_SCL(1);
 130   1          Delayus(1);
 131   1          while (BM8563_SDA == 1 && i < 250)
 132   1              i++;
 133   1          BM8563_SCL(0);
 134   1          BM8563_SDA_Output();           //   设置成输出
 135   1          Delayus(2);
 136   1      }
 137          
 138          /******************************************************************** 
 139          函 数 名：SendByte(void) 
 140          功 能：向 BM8563 写一个字节的数据 
 141          说 明： 被 GetBM8563(void) 调用 
 142          调 用：被 GetBM8563(void)、setBM8563(void)调用 
 143          入口参数：byte（要写入的单字节数据） 
 144          返 回 值：无 
 145          ***********************************************************************/ 
 146          
 147          void BM8563_IIC_WriteByte(uint8_t byte)
 148          {
 149   1          uint8_t len = 0;
 150   1          BM8563_SCL(0);
 151   1          Delayus(2);
 152   1          for (len = 0; len < 8; len++)
 153   1          {
 154   2              if (byte & 0x80)
 155   2              {
 156   3                  BM8563_SDA(1);
 157   3              }
 158   2              else
 159   2              {
 160   3                  BM8563_SDA(0);
 161   3              }
 162   2              Delayus(1);
 163   2              BM8563_SCL(1);
 164   2              byte <<= 1;
 165   2              Delayus(1);
 166   2              BM8563_SCL(0);
 167   2              Delayus(2);
 168   2          }
 169   1          BM8563_SDA(1);
 170   1          BM8563_SCL(0);
 171   1          Delayus(2);
 172   1      }
 173          
 174          /******************************************************************** 
 175          函 数 名：BM8563_send_add_byte(void) 
 176          功 能：向 BM8563 的地址发送数据 
 177          说 明：  
 178          调 用：
C51 COMPILER V9.56.0.0   BM8563                                                            09/07/2020 22:21:34 PAGE 4   

 179          入口参数：add bat 
 180          返 回 值：无 
 181          ***********************************************************************/ 
 182          
 183          void BM8563_send_add_byte(uint8_t add,uint8_t bat) //向某个地址发送某数据
 184          {
 185   1              
 186   1              BM8563_IIC_Start();
 187   1              BM8563_IIC_WriteByte(0xa2);
 188   1              BM8563_IIC_Wait_ACK();
 189   1              BM8563_IIC_WriteByte(add);
 190   1              BM8563_IIC_Wait_ACK();
 191   1              BM8563_IIC_WriteByte(bat);
 192   1              BM8563_IIC_Wait_ACK();
 193   1              BM8563_IIC_Stop();
 194   1      }
 195          
 196          
 197          /******************************************************************** 
 198          函 数 名：BM8563_IIC_ReadByte(void) 
 199          功 能：从 BM8563 读取一个字节的数据 
 200          说 明：该程序要配合 SendByte()程序一起完成对 BM8563 的读操作，被 GetBM8563(void) 
 201           调用 
 202          调 用：被 GetBM8563(void)调用 
 203          入口参数：无 
 204          返 回 值：Byte 
 205          ***********************************************************************/ 
 206          
 207          uint8_t BM8563_IIC_ReadByte(void)
 208          {
 209   1          uint8_t len = 0, Byte = 0;
 210   1          BM8563_SDA(1);
 211   1          BM8563_SDA_Input();            // SDA 设置为输入
 212   1          for (len = 0; len < 8; len++)
 213   1          {
 214   2              BM8563_SCL(0);
 215   2              Delayus(1);
 216   2              BM8563_SCL(1);
 217   2              Delayus(1);
 218   2              Byte <<= 1;
 219   2              Byte |= BM8563_SDA;
 220   2              Delayus(1);
 221   2              BM8563_SCL(0);
 222   2              Delayus(1);
 223   2          }
 224   1          return Byte;
 225   1      }
 226          
 227          /*********************************************
 228          函数名：BM8563_IIC_ReceiveData
 229          功  能：向从设备接收一个字节，并带应答
 230          形  参：
 231          返回值：
 232          备  注：
 233          时  间：2020/07/15
 234          **********************************************/
 235          uint8_t BM8563_IIC_ReceiveData(uint8_t Ack)
 236          {
 237   1          uint8_t i = 0, ReadValue = 0;
 238   1          BM8563_SDA_Output();   //   设置成输出模式
 239   1          BM8563_SDA(1);
 240   1          BM8563_SDA_Input();    //   设置为输入模式
C51 COMPILER V9.56.0.0   BM8563                                                            09/07/2020 22:21:34 PAGE 5   

 241   1          BM8563_SCL(0);
 242   1      
 243   1          for (i = 0; i < 8; i++)
 244   1          {
 245   2              BM8563_SCL(1);
 246   2              Delayus(1);
 247   2              ReadValue <<= 1;
 248   2              if (BM8563_SDA != 0)
 249   2              {
 250   3                  ReadValue |= 0x01;
 251   3              }
 252   2              Delayus(1);
 253   2              BM8563_SCL(0);
 254   2              Delayus(2);
 255   2          }
 256   1          if (Ack)
 257   1          {
 258   2              BM8563_SCL(0);
 259   2              BM8563_SDA_Output();   //   设置成输出模式
 260   2              BM8563_SDA(0);
 261   2              Delayus(2);
 262   2              BM8563_SCL(1);
 263   2              Delayus(1);
 264   2              BM8563_SCL(0);
 265   2          }
 266   1          else
 267   1          {
 268   2              BM8563_SCL(0);
 269   2              BM8563_SDA_Output();   //   设置成输出模式
 270   2              BM8563_SDA(1);
 271   2              Delayus(2);
 272   2              BM8563_SCL(1);
 273   2              Delayus(1);
 274   2              BM8563_SCL(0);
 275   2          }
 276   1          return ReadValue;
 277   1      }
 278          
 279          /******************************************************************** 
 280          函 数 名：BM8563_read_add_byte
 281          功 能：从 BM8563 的地址读取数据 
 282          说 明：  
 283          调 用：
 284          入口参数：add 
 285          返 回 值：temp
 286          ***********************************************************************/ 
 287          uint8_t BM8563_read_add_byte(uint8_t add) //从某个地址读出数据
 288          {
 289   1         uint8_t temp;        
 290   1         BM8563_IIC_Start();
 291   1         BM8563_IIC_WriteByte(0xa2);
 292   1         BM8563_IIC_Wait_ACK();
 293   1         BM8563_IIC_WriteByte(add);
 294   1         BM8563_IIC_Wait_ACK();
 295   1         BM8563_IIC_Start();
 296   1         BM8563_IIC_WriteByte(0xa3);
 297   1         BM8563_IIC_Wait_ACK();
 298   1         temp=BM8563_IIC_ReadByte();
 299   1         BM8563_IIC_Stop();
 300   1         return temp;
 301   1      }
 302          
C51 COMPILER V9.56.0.0   BM8563                                                            09/07/2020 22:21:34 PAGE 6   

 303          /******************************************************************** 
 304          函 数 名： GetBM8563(void) 
 305          功 能：从 BM8563 的内部寄存器（时间、状态、报警等寄存器）读取数据 
 306          说 明：该程序函数用来读取 BM8563 的内部寄存器，譬如时间，报警，状态等寄存器 
 307           采用页写的方式，设置数据的个数为 no，no 参数设置为 1 就是单字节方式 
 308          调 用：Start_I2C()，SendByte()，RcvByte()，Ack_I2C()，Stop_I2C() 
 309          入口参数：sla（BM8563 从地址）， suba（BM8563 内部寄存器地址） 
 310           *s（设置读取数据存储的指针）， no（传输数据的个数） 
 311          返 回 值：有，返回布尔量（bit）用来鉴定传输成功否 
 312          ***********************************************************************/ 
 313          // bit GetBM8563(uint8_t sla,uint8_t suba,uint8_t *s,uchar no) 
 314          // { 
 315          // uchar i; 
 316          // BM8563_IIC_Start(); 
 317          // BM8563_IIC_WriteByte(sla); 
 318          // if(ack==0)return(0); 
 319          // BM8563_IIC_WriteByte(suba); 
 320          // if(ack==0)return(0); 
 321          // BM8563_IIC_Start(); 
 322          // BM8563_IIC_WriteByte(sla+1); 
 323          // if(ack==0)return(0); 
 324          // 
 325          // for (i=0;i<no-1;i++) 
 326          // { 
 327          // *s=BM8563_IIC_ReceiveData(); 
 328          //// Ack_I2C(0); 
 329          // s++; 
 330          // } 
 331          // *s=BM8563_IIC_ReceiveData(); 
 332          //// Ack_I2C(1); 
 333          // BM8563_IIC_Stop();//除最后一个字节外，其他都要从 MASTER 发应答。 
 334          // return(1); 
 335          // } 
 336           
 337          
 338          /******************************************************************** 
 339          函 数 名：SetBM8563(void) 
 340          功 能：设置 BM8563 的内部寄存器（时间，报警等寄存器） 
 341          说 明：该程序函数用来设置 BM8563 的内部寄存器，譬如时间，报警，状态等寄存器 
 342           采用页写的方式，设置数据的个数为 no，no 参数设置为 1 就是单字节方式 
 343          调 用：Start_I2C()，SendByte()，Stop_I2C() 
 344          入口参数：sla（BM8563 从地址）， suba（BM8563 内部寄存器地址） 
 345           *s（设置初始化数据的指针）， no（传输数据的个数） 
 346          返 回 值：有，返回布尔量（bit）用来鉴定传输成功否 
 347          ***********************************************************************/ 
 348           bit SetBM8563(uint8_t sla,uint8_t suba,uint8_t *s,uint8_t no) 
 349           { 
 350   1       uint8_t i; 
 351   1       BM8563_IIC_Start(); 
 352   1       BM8563_IIC_WriteByte(sla); 
 353   1       if(ack==0)return(0); 
 354   1       BM8563_IIC_WriteByte(suba); 
 355   1       if(ack==0)return(0); 
 356   1       for(i=0;i<no;i++) 
 357   1      { 
 358   2       BM8563_IIC_WriteByte(*s); 
 359   2       if(ack==0)return(0); 
 360   2       s++; 
 361   2      } 
 362   1      BM8563_IIC_Stop(); 
 363   1      return(1); 
 364   1      } 
C51 COMPILER V9.56.0.0   BM8563                                                            09/07/2020 22:21:34 PAGE 7   

 365          
 366          /******************************************************************** 
 367          函 数 名：void Bcd2asc(void) 
 368          功 能：bcd 码转换成 asc 码，供液晶显示用 
 369          说 明： 
 370          调 用： 
 371          入口参数： 
 372          返 回 值：无 
 373          ***********************************************************************/ 
 374          //void Bcd2asc(void) 
 375          //{ 
 376          // uchar i,j; 
 377          // 
 378          // for (j=0,i=0; i<7; i++) 
 379          // { 
 380          // time_timeout.min =(time_timeset.min&0xf0)>>4|0x30 ;/*格式为: 秒 分 时 日 月 星期 年 */ 
 381          
 382          // time_timeout.min =time_timeset.min&0x0f|0x30; 
 383          // } 
 384          //} 
 385          
 386          /******************************************************************** 
 387          函 数 名：void Bcd_dec(void) 
 388          功 能：BCD转10进制表示
 389          说 明： 
 390          调 用： 
 391          入口参数： 
 392          返 回 值：无 
 393          ***********************************************************************/ 
 394          uint8_t Bcd_dec(uint8_t bat)
 395          {
 396   1      uint8_t temp1,temp2,tol;
 397   1      temp1=bat&0x0f;
 398   1      temp2=(bat&0xf0)>>4;
 399   1      tol=temp2*10+temp1;
 400   1      return tol; 
 401   1      }
 402          
 403          /******************************************************************** 
 404          函 数 名：datajust(void) 
 405          功 能：将读出的时间数据的无关位屏蔽掉 
 406          说 明：BM8563 时钟寄存器中有些是无关位，可以将无效位屏蔽掉 
 407          调 用： 
 408          入口参数： 
 409          返 回 值：无 
 410          ***********************************************************************/ 
 411          //void datajust(void) 
 412          //{ 
 413          // 
 414          // trdata[0] = trdata[0]&0x7f; 
 415          // trdata[1] = trdata[1]&0x7f; 
 416          // trdata[2] = trdata[2]&0x3f; 
 417          // trdata[3] = trdata[3]&0x3f; 
 418          // trdata[4] = trdata[4]&0x07; 
 419          // trdata[5] = trdata[5]&0x1f; 
 420          // trdata[6] = trdata[6]&0xff; 
 421          
 422          //} 
 423          
 424          /******************************************************************** 
 425          函 数 名：delayx1ms(void) 
 426          功 能：延时 
C51 COMPILER V9.56.0.0   BM8563                                                            09/07/2020 22:21:34 PAGE 8   

 427          说 明： 
 428          调 用： 
 429          入口参数： 
 430          返 回 值：无 
 431          ***********************************************************************/ 
 432          void BM8563_get_time(void) 
 433          { 
 434   1              TIME time_ASC;
 435   1              TIME time_BCD;
 436   1      
 437   1      
 438   1               time_ASC.sec=0x7f&BM8563_read_add_byte(0x02);          //读取秒
 439   1               time_ASC.min=0x7f&BM8563_read_add_byte(0x03);          //读取分钟
 440   1               time_ASC.hour=0x3f&BM8563_read_add_byte(0x04);         //读取小时
 441   1      //         time_ASC.day=0x3f&BM8563_read_add_byte(0x05);        //读取天数
 442   1      //         time_ASC.moom=0x1f&BM8563_read_add_byte(0x07);       //读取月
 443   1      //         time_ASC.year=0xff&BM8563_read_add_byte(0x08);     //读取年
 444   1                                      
 445   1               time_BCD.sec=Bcd_dec(time_ASC.sec);                //将读取的BCD码秒转换成十进制秒以便运算
 446   1               time_BCD.min=Bcd_dec(time_ASC.min);
 447   1               time_BCD.hour=Bcd_dec(time_ASC.hour);
 448   1      //         time_BCD.day=Bcd_dec(time_ASC.day);
 449   1      //         time_BCD.moom=Bcd_dec(time_ASC.moom);
 450   1      //         time_BCD.year=Bcd_dec(time_ASC.year);
 451   1      //      BM8563_hour = time_BCD.hour;
 452   1      //      BM8563_min = time_BCD.min;
 453   1                      now.hour = time_BCD.hour;
 454   1                      now.min = time_BCD.min;
 455   1      } 
 456          
 457          /******************************************************************** 
 458          函 数 名：BM8563_init(void) 
 459          功 能：初始化 BM8563，然后循环读取 BM8563 的时钟并存储。 
 460          说 明：该程序只是简单的将固定的时间设置到 BM8563，然后循环都 BM8563 的时间 
 461           并存储，对 BM8563 其它的功能没有操作，用户可以根据需要添加其它的功能 
 462           程序。 
 463          调 用： 
 464          返 回 值：无 
 465          ***********************************************************************/ 
 466           void BM8563_init(void) 
 467          { 
 468   1              IIC_Init();
 469   1              BM8563_send_add_byte(0x00,0x00);  //启动时钟
 470   1              Time_init();
 471   1      }
 472          /******************************************************************** 
 473          函 数 名：Time_init(void) 
 474          功 能：时钟设置初始化
 475          说 明：  
 476          调 用： 
 477          返 回 值：无 
 478          ***********************************************************************/ 
 479          void  Time_init(void)           
 480          {
 481   1        BM8563_send_add_byte(0x02,0x00);         //0秒
 482   1        BM8563_send_add_byte(0x03,0x00);         //0分钟    
 483   1        BM8563_send_add_byte(0x04,0x00);         //0小时             
 484   1        BM8563_send_add_byte(0x05,0x01);         //26号
 485   1        BM8563_send_add_byte(0x07,0x01);         //5月  20世纪的
 486   1        BM8563_send_add_byte(0x08,0x20);         //2014年
 487   1      }

C51 COMPILER V9.56.0.0   BM8563                                                            09/07/2020 22:21:34 PAGE 9   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    537    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
