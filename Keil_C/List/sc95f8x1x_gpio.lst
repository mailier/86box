C51 COMPILER V9.56.0.0   SC95F8X1X_GPIO                                                    09/07/2020 22:21:35 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SC95F8X1X_GPIO
OBJECT MODULE PLACED IN ..\Output\sc95f8x1x_gpio.obj
COMPILER INVOKED BY: E:\keil5\C51\BIN\C51.EXE ..\FWLib\SC95F8x1x_Lib\src\sc95f8x1x_gpio.c OMF2 OPTIMIZE(8,SPEED) BROWSE 
                    -INCDIR(..\FWLib\SC95F8x1x_Lib\inc;..\User) DEBUG PRINT(..\List\sc95f8x1x_gpio.lst) OBJECT(..\Output\sc95f8x1x_gpio.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        : sc95f8x1x_gpio.c
   4          //      作者            : 
   5          //      模块功能        : GPIO固件库函数C文件
   6          //      局部函数列表:
   7          //  最后更正日期: 2019/7/10
   8          //      版本            : V1.0 
   9          //  说明        ：  
  10          //*************************************************************
  11          
  12          #include "sc95f8x1x_gpio.h"
  13          
  14          /**************************************************
  15          *函数名称：void GPIO_DeInit(void)
  16          *函数功能：GPIO相关寄存器复位至缺省值
  17          *入口参数：void
  18          *出口参数：void
  19          **************************************************/
  20          void GPIO_DeInit(void)
  21          {
  22   1              P0CON = 0x00;
  23   1              P1CON = 0x00;
  24   1              P2CON = 0x00;
  25   1              P3CON = 0x00;
  26   1              P4CON = 0x00;
  27   1              P5CON = 0x00;
  28   1              P0PH = 0x00;
  29   1              P1PH = 0x00;
  30   1              P2PH = 0x00;
  31   1              P3PH = 0x00;
  32   1              P4PH = 0x00;
  33   1              P5PH = 0x00;
  34   1              P0 = P1 = P2 = P3 = P4 = P5 = 0;
  35   1      }
  36          
  37          /**************************************************
  38          *函数名称：void GPIO_Init(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins, GPIO_Mode_TypeDef GPIO_Mode)
  39          *函数功能：GPIO口模式配置初始化
  40          *入口参数：GPIOx                选择操作的GPIO口
  41                             PortPins             选择GPIO管脚Pxy
  42                             GPIO_Mode    选择GPIO口模式（高阻输入、上拉输入、推挽输出）
  43          *出口参数：void
  44          **************************************************/
  45          void GPIO_Init(GPIO_TypeDef GPIOx, uint8_t PortPins, GPIO_Mode_TypeDef GPIO_Mode)
  46          {
  47   1              if(GPIOx == GPIO0)
  48   1              {
  49   2                      if(GPIO_Mode == GPIO_MODE_IN_HI)
  50   2                      {
  51   3                              P0CON &= ~PortPins;
  52   3                              P0PH  &= ~PortPins;
  53   3                      }
  54   2                      if(GPIO_Mode == GPIO_MODE_IN_PU)
C51 COMPILER V9.56.0.0   SC95F8X1X_GPIO                                                    09/07/2020 22:21:35 PAGE 2   

  55   2                      {
  56   3                              P0CON &= ~PortPins;
  57   3                              P0PH  |= PortPins;
  58   3                      }
  59   2                      if(GPIO_Mode == GPIO_MODE_OUT_PP)
  60   2                      {
  61   3                              P0CON |= PortPins;
  62   3                      }               
  63   2              }
  64   1              else if(GPIOx == GPIO1)
  65   1              {
  66   2                      if(GPIO_Mode == GPIO_MODE_IN_HI)
  67   2                      {
  68   3                              P1CON &= ~PortPins;
  69   3                              P1PH  &= ~PortPins;
  70   3                      }
  71   2                      if(GPIO_Mode == GPIO_MODE_IN_PU)
  72   2                      {
  73   3                              P1CON &= ~PortPins;
  74   3                              P1PH  |= PortPins;
  75   3                      }
  76   2                      if(GPIO_Mode == GPIO_MODE_OUT_PP)
  77   2                      {
  78   3                              P1CON |= PortPins;
  79   3                      }       
  80   2              }
  81   1              else if(GPIOx == GPIO2)
  82   1              {
  83   2                      if(GPIO_Mode == GPIO_MODE_IN_HI)
  84   2                      {
  85   3                              P2CON &= ~PortPins;
  86   3                              P2PH  &= ~PortPins;
  87   3                      }
  88   2                      if(GPIO_Mode == GPIO_MODE_IN_PU)
  89   2                      {
  90   3                              P2CON &= ~PortPins;
  91   3                              P2PH  |= PortPins;
  92   3                      }
  93   2                      if(GPIO_Mode == GPIO_MODE_OUT_PP)
  94   2                      {
  95   3                              P2CON |= PortPins;
  96   3                      }       
  97   2              }
  98   1              else if(GPIOx == GPIO3)
  99   1              {
 100   2                      if(GPIO_Mode == GPIO_MODE_IN_HI)
 101   2                      {
 102   3                              P3CON &= ~PortPins;
 103   3                              P3PH  &= ~PortPins;
 104   3                      }
 105   2                      if(GPIO_Mode == GPIO_MODE_IN_PU)
 106   2                      {
 107   3                              P3CON &= ~PortPins;
 108   3                              P3PH  |= PortPins;
 109   3                      }
 110   2                      if(GPIO_Mode == GPIO_MODE_OUT_PP)
 111   2                      {
 112   3                              P3CON |= PortPins;
 113   3                      }       
 114   2              }
 115   1              else if(GPIOx == GPIO4)
 116   1              {
C51 COMPILER V9.56.0.0   SC95F8X1X_GPIO                                                    09/07/2020 22:21:35 PAGE 3   

 117   2                      if(GPIO_Mode == GPIO_MODE_IN_HI)
 118   2                      {
 119   3                              P4CON &= ~PortPins;
 120   3                              P4PH  &= ~PortPins;
 121   3                      }
 122   2                      if(GPIO_Mode == GPIO_MODE_IN_PU)
 123   2                      {
 124   3                              P4CON &= ~PortPins;
 125   3                              P4PH  |= PortPins;
 126   3                      }
 127   2                      if(GPIO_Mode == GPIO_MODE_OUT_PP)
 128   2                      {
 129   3                              P4CON |= PortPins;
 130   3                      }       
 131   2              }
 132   1              else
 133   1              {
 134   2                      if(GPIOx == GPIO5)
 135   2                      {
 136   3                              if(GPIO_Mode == GPIO_MODE_IN_HI)
 137   3                              {
 138   4                                      P5CON &= ~PortPins;
 139   4                                      P5PH  &= ~PortPins;
 140   4                              }
 141   3                              if(GPIO_Mode == GPIO_MODE_IN_PU)
 142   3                              {
 143   4                                      P5CON &= ~PortPins;
 144   4                                      P5PH  |= PortPins;
 145   4                              }
 146   3                              if(GPIO_Mode == GPIO_MODE_OUT_PP)
 147   3                              {
 148   4                                      P5CON |= PortPins;
 149   4                              }               
 150   3                      }
 151   2              }
 152   1      }
 153          
 154          /**************************************************
 155          *函数名称：void GPIO_Write(GPIO_TypeDef GPIOx, uint8_t PortVal)
 156          *函数功能：GPIO口赋值
 157          *入口参数：GPIOx        选择操作的GPIO口
 158                             PortVal  GPIO口的值
 159          *出口参数：void
 160          **************************************************/
 161          void GPIO_Write(GPIO_TypeDef GPIOx, uint8_t PortVal)
 162          {
 163   1          if(GPIOx == GPIO0)
 164   1              {
 165   2                      P0 = PortVal;
 166   2              }
 167   1              if(GPIOx == GPIO1)
 168   1              {
 169   2                      P1 = PortVal;
 170   2              }
 171   1              if(GPIOx == GPIO2)
 172   1              { 
 173   2                      P2 = PortVal;
 174   2              }
 175   1              if(GPIOx == GPIO3)
 176   1              { 
 177   2                      P3 = PortVal;
 178   2              }
C51 COMPILER V9.56.0.0   SC95F8X1X_GPIO                                                    09/07/2020 22:21:35 PAGE 4   

 179   1              if(GPIOx == GPIO4)
 180   1              { 
 181   2                      P4 = PortVal;
 182   2              }
 183   1              if(GPIOx == GPIO5)
 184   1              { 
 185   2                      P5 = PortVal;
 186   2              }
 187   1      }
 188          
 189          /**************************************************
 190          *函数名称：void GPIO_WriteHigh(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins)
 191          *函数功能：GPIO口管脚Pxy置位
 192          *入口参数：GPIOx                选择操作的GPIO口
 193                             PortPins             选择GPIO口管脚Pxy
 194          *出口参数：void
 195          **************************************************/
 196          void GPIO_WriteHigh(GPIO_TypeDef GPIOx, uint8_t PortPins)
 197          {
 198   1              if(GPIOx == GPIO0)
 199   1              {
 200   2                      P0 |= PortPins;
 201   2              }
 202   1              if(GPIOx == GPIO1)
 203   1              {
 204   2                      P1 |= PortPins;
 205   2              }
 206   1              if(GPIOx == GPIO2)
 207   1              {   
 208   2                      P2 |= PortPins; 
 209   2              } 
 210   1              if(GPIOx == GPIO3)
 211   1              {   
 212   2                      P3 |= PortPins; 
 213   2              } 
 214   1              if(GPIOx == GPIO4)
 215   1              {   
 216   2                      P4 |= PortPins; 
 217   2              } 
 218   1              if(GPIOx == GPIO5)
 219   1              {   
 220   2                      P5 |= PortPins; 
 221   2              }    
 222   1      }
 223          
 224          /**************************************************
 225          *函数名称：void GPIO_WriteLow(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins)
 226          *函数功能：GPIO口管脚Pxy复位
 227          *入口参数：GPIOx                选择操作的GPIO口
 228                             PortPins             选择GPIO口管脚Pxy
 229          *出口参数：void
 230          **************************************************/
 231          void GPIO_WriteLow(GPIO_TypeDef GPIOx, uint8_t PortPins)
 232          {
 233   1              if(GPIOx == GPIO0)
 234   1              {
 235   2                      P0 &= ~PortPins;
 236   2              }
 237   1              if(GPIOx == GPIO1)
 238   1              {
 239   2                      P1 &= ~PortPins;
 240   2              }
C51 COMPILER V9.56.0.0   SC95F8X1X_GPIO                                                    09/07/2020 22:21:35 PAGE 5   

 241   1              if(GPIOx == GPIO2)
 242   1              {   
 243   2                      P2 &= ~PortPins;        
 244   2              } 
 245   1              if(GPIOx == GPIO3)
 246   1              {   
 247   2                      P3 &= ~PortPins;        
 248   2              } 
 249   1              if(GPIOx == GPIO4)
 250   1              {   
 251   2                      P4 &= ~PortPins;
 252   2              } 
 253   1              if(GPIOx == GPIO5)
 254   1              {   
 255   2                      P5 &= ~PortPins;        
 256   2              }  
 257   1      }
 258          
 259          /**************************************************
 260          *函数名称：uint8_t GPIO_ReadPort(GPIO_TypeDef GPIOx)
 261          *函数功能：读GPIO口Px的值
 262          *入口参数：GPIOx        选择操作的GPIO口
 263          *出口参数：uint8_t      返回Px的值
 264          **************************************************/
 265          uint8_t GPIO_ReadPort(GPIO_TypeDef GPIOx)
 266          {
 267   1          if(GPIOx == GPIO0)
 268   1              {
 269   2                      return P0;
 270   2              }
 271   1              else if(GPIOx == GPIO1)
 272   1              {
 273   2                      return P1;
 274   2              }
 275   1              else if(GPIOx == GPIO2)
 276   1              {
 277   2                      return P2;
 278   2              }
 279   1              else if(GPIOx == GPIO3)
 280   1              {
 281   2                      return P3;
 282   2              }
 283   1              else if(GPIOx == GPIO4)
 284   1              {
 285   2                      return P4;
 286   2              }
 287   1              else 
 288   1              {
 289   2                      return P5;
 290   2              }
 291   1      }
 292          
 293          /**************************************************
 294          *函数名称：BitStatus GPIO_ReadPin(GPIO_TypeDef GPIOx, uint8_t PortPins)
 295          *函数功能：读GPIO口管脚Pxy的值
 296          *入口参数：GPIOx                选择操作的GPIO口
 297                             PortPins             选择GPIO口管脚Pxy
 298          *出口参数：BitStatus    返回Pxy的值
 299          **************************************************/
 300          uint8_t GPIO_ReadPin(GPIO_TypeDef GPIOx, uint8_t PortPins)
 301          {
 302   1              if(GPIOx == GPIO0)
C51 COMPILER V9.56.0.0   SC95F8X1X_GPIO                                                    09/07/2020 22:21:35 PAGE 6   

 303   1              {
 304   2                      return (P0 & PortPins);
 305   2              }
 306   1              else if(GPIOx == GPIO1)
 307   1              {
 308   2                      return (P1 & PortPins);
 309   2              }
 310   1              else if(GPIOx == GPIO2)
 311   1              {
 312   2                      return (P2 & PortPins);
 313   2              }
 314   1              else if(GPIOx == GPIO3)
 315   1              {
 316   2                      return (P3 & PortPins);
 317   2              }
 318   1              else if(GPIOx == GPIO4)
 319   1              {
 320   2                      return (P4 & PortPins);
 321   2              }
 322   1              else
 323   1              {
 324   2                      return (P5 & PortPins); 
 325   2              }                                 
 326   1      }
 327          
 328          /******************* (C) COPYRIGHT 2018 SinOne Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    427    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
